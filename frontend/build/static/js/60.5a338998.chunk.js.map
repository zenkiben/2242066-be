{"version":3,"file":"static/js/60.5a338998.chunk.js","mappings":"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","sources":["pages/AddEditAdvertisement/index.jsx","services/axiosServices.js"],"sourcesContent":["import { useFormik } from \"formik\";\nimport React, { useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  Col,\n  Form,\n  FormFeedback,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from \"reactstrap\";\n\nimport * as yup from \"yup\";\n\nimport { axiosService } from \"../../services/axiosServices\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst AddEditAdvertisement = ({ isEdit }) => {\n\n  const navigate = useNavigate();\n  let { AdvertisementId } = useParams();\n\n  const validationSchema = yup.object().shape({\n    title: yup.string().required(\"Vui lòng nhập tiêu đề\"),\n    description: yup.string().required(\"Vui lòng nhập thông tin\"),\n    start_date: yup.string().required(\"Vui lòng nhập ngày bắt đầu\"),\n    end_date: yup.string().required(\"Vui lòng nhập ngày kết thúc\"),\n    lat: yup.string().required(\"Vui lòng nhập kinh độ\"),\n    long: yup.string().required(\"Vui lòng nhập vĩ độ\"),\n    width_advertisement: yup.string().required(\"Vui lòng nhập chiều dài\"),\n    height_advertisement: yup.string().required(\"Vui lòng nhập chiều rộng\"),\n    price: yup.string().required(\"Vui lòng nhập giá tiền\"),\n  });\n\n  const getAdvertisement = async () => {\n    try {\n      const { data } = await axiosService.get(`/advertisement/${AdvertisementId}`);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  const handleUpdateAdvertisement = () => {\n    try {\n      const { data } = axiosService.put(`/advertisement/${AdvertisementId}`, {\n        title: formik.values.title,\n        description: formik.values.description,\n        start_date: formik.values.start_date,\n        end_date: formik.values.end_date,\n        latitude: formik.values.lat,\n        longitude: formik.values.long,\n        width: formik.values.width_advertisement,\n        height: formik.values.height_advertisement,\n        price: formik.values.price,\n        is_approved: formik.values.isApproved,\n        is_active: formik.values.isActive,\n      });\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      lat: \"\",\n      long: \"\",\n      width_advertisement: \"\",\n      height_advertisement: \"\",\n      price: \"\",\n      isApproved: 0,\n      isActive: 0,\n    },\n    validationSchema: validationSchema,\n    onSubmit: async () => {\n      try {\n        if (isEdit) {\n          await handleUpdateAdvertisement();\n          navigate(\"/danh-sach-bang-quang-cao\")\n        } else {\n          await handleAddAdvertisement();\n          navigate(\"/danh-sach-bang-quang-cao\")\n        }\n      } catch (error) {\n      }\n    },\n  });\n\n  useEffect(() => {\n    if (isEdit) {\n      getAdvertisement().then((data) => {\n        formik.setValues({\n          title: data.data.title,\n          description: data.data.description,\n          start_date: data.data.startDate,\n          end_date: data.data.endDate,\n          lat: data.data.latitude,\n          long: data.data.longitude,\n          width_advertisement: data.data.width,\n          height_advertisement: data.data.height,\n          price: data.data.price,\n          isApproved: data.data.isApproved,\n          isActive: data.data.isActive,\n        });\n      });\n    }\n\n  }, [AdvertisementId]);\n\n  const handleAddAdvertisement = async () => {\n    try {\n      const { data } = await axiosService.post(\"/advertisement\", {\n        title: formik.values.title,\n        description: formik.values.description,\n        start_date: formik.values.start_date,\n        end_date: formik.values.end_date,\n        latitude: formik.values.lat,\n        longitude: formik.values.long,\n        width: formik.values.width_advertisement,\n        height: formik.values.height_advertisement,\n        price: formik.values.price,\n        is_approved: formik.values.isApproved,\n        is_active: formik.values.isActive,\n      });\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n    \n  return (\n    <>\n      <div className=\"add-edit-advertisement\">\n        <Row>\n          <Col md={12}>\n            <Card>\n              <CardTitle className=\"text-center my-3 fw-bold\" tag=\"h2\">\n                {isEdit ? \"Sửa bảng quảng cáo\" : \"Thêm bảng quảng cáo\"}\n              </CardTitle>\n              <CardBody>\n                <Form onSubmit={formik.handleSubmit}>\n                  <FormGroup>\n                    <Label for=\"exampleEmail\" className=\"fw-bold\">\n                      Tiêu đề quảng cáo\n                    </Label>\n                    <Input\n                      name=\"title\"\n                      placeholder=\"Nhập tên bảng quảng cáo\"\n                      type=\"text\"\n                      invalid={\n                        formik.touched.title && Boolean(formik.errors.title)\n                      }\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      value={formik.values.title}\n                    />\n                    <FormFeedback>{formik.errors.title}</FormFeedback>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"exampleEmail\" className=\"fw-bold\">\n                      Thông tin bảng quảng cáo\n                    </Label>\n                    <Input\n                      name=\"description\"\n                      placeholder=\"Thông tin bảng quảng cáo\"\n                      type=\"textarea\"\n                      aria-multiline\n                      rows=\"7\"\n                      onChange={formik.handleChange}\n                      invalid={\n                        formik.touched.description &&\n                        Boolean(formik.errors.description)\n                      }\n                      value={formik.values.description}\n                      onBlur={formik.handleBlur}\n                    />\n                    <FormFeedback>{formik.errors.description}</FormFeedback>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"exampleEmail\" className=\"fw-bold\">\n                      Ngày bắt đầu\n                    </Label>\n                    <Input\n                      name=\"start_date\"\n                      type=\"date\"\n                      onChange={formik.handleChange}\n                      invalid={\n                        formik.touched.start_date &&\n                        Boolean(formik.errors.start_date)\n                      }\n                      onBlur={formik.handleBlur}\n                      value={moment(formik.values.start_date).format(\"yyyy-MM-DD\")}\n                    />\n                    <FormFeedback>{formik.errors.start_date}</FormFeedback>\n                  </FormGroup>\n                  <FormGroup>\n                    <Label for=\"exampleEmail\" className=\"fw-bold\">\n                      Ngày kết thúc\n                    </Label>\n                    <Input\n                      name=\"end_date\"\n                      type=\"date\"\n                      onChange={formik.handleChange}\n                      invalid={\n                        formik.touched.end_date &&\n                        Boolean(formik.errors.end_date)\n                      }\n                      value={moment(formik.values.end_date).format(\"yyyy-MM-DD\")}\n                    />\n                    <FormFeedback>{formik.errors.end_date}</FormFeedback>\n                  </FormGroup>\n                  <Col md={12} className=\"d-flex\">\n                    <Col md={6} className=\"p-2\">\n                      <FormGroup>\n                        <Label for=\"exampleEmail\" className=\"fw-bold\">\n                          Kinh độ\n                        </Label>\n                        <Input\n                          name=\"lat\"\n                          type=\"text\"\n                          placeholder=\"Nhập kinh độ\"\n                          onChange={formik.handleChange}\n                          invalid={\n                            formik.touched.lat && Boolean(formik.errors.lat)\n                          }\n                          value={formik.values.lat}\n                        />\n                        <FormFeedback>{formik.errors.lat}</FormFeedback>\n                      </FormGroup>\n                    </Col>\n                    <Col md={6} className=\"p-2\">\n                      <FormGroup>\n                        <Label for=\"exampleEmail\" className=\"fw-bold\">\n                          Vĩ độ\n                        </Label>\n                        <Input\n                          name=\"long\"\n                          type=\"text\"\n                          placeholder=\"Nhập vĩ độ\"\n                          onChange={formik.handleChange}\n                          invalid={\n                            formik.touched.long && Boolean(formik.errors.long)\n                          }\n                          value={formik.values.long}\n\n                        />\n                        <FormFeedback>{formik.errors.long}</FormFeedback>\n                      </FormGroup>\n                    </Col>\n                  </Col>\n                  <Col md={12} className=\"d-flex\">\n                    <Col md={6} className=\"d-flex\">\n                      <Col className=\"p-2\">\n                        <FormGroup>\n                          <Label className=\"fw-bold\">Chiều dài</Label>\n                          <Input\n                            name=\"width_advertisement\"\n                            type=\"text\"\n                            placeholder=\"Chiều dài bảng quảng cáo\"\n                            onChange={formik.handleChange}\n                            invalid={\n                              formik.touched.width_advertisement &&\n                              Boolean(formik.errors.width_advertisement)\n                            }\n                            value={formik.values.width_advertisement}\n                          />\n                          <FormFeedback>\n                            {formik.errors.width_advertisement}\n                          </FormFeedback>\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"p-2\">\n                        <FormGroup>\n                          <Label className=\"fw-bold\">Chiều rộng</Label>\n                          <Input\n                            name=\"height_advertisement\"\n                            type=\"text\"\n                            placeholder=\"Chiều rộng bảng quảng cáo\"\n                            onChange={formik.handleChange}\n                            invalid={\n                              formik.touched.height_advertisement &&\n                              Boolean(formik.errors.height_advertisement)\n                            }\n                            value={formik.values.height_advertisement}\n                          />\n                          <FormFeedback>\n                            {formik.errors.height_advertisement}\n                          </FormFeedback>\n                        </FormGroup>\n                      </Col>\n                    </Col>\n                    <Col md={6} className=\"p-2\">\n                      <FormGroup>\n                        <Label for=\"exampleEmail\" className=\"fw-bold\">\n                          Giá tiền\n                        </Label>\n                        <Input\n                          name=\"price\"\n                          type=\"text\"\n                          onChange={formik.handleChange}\n                          invalid={\n                            formik.touched.price && Boolean(formik.errors.price)\n                          }\n                          value={formik.values.price}\n                        ></Input>\n                        <FormFeedback>{formik.errors.price}</FormFeedback>\n                      </FormGroup>\n                    </Col>\n                  </Col>\n                  <Col md={12} className=\"d-flex\">\n                    <Col md={6}>\n                      <Col md={3}>\n                        <Input\n                          type=\"checkbox\"\n                          name=\"isActive\"\n                          onChange={formik.handleChange}\n                          value=\"1\"\n                          checked={formik.values.isActive}\n                        />{\" \"}\n                        &nbsp;\n                        <Label for=\"exampleEmail\" className=\"fw-bold\">\n                          Hiển thị\n                        </Label>\n                      </Col>\n                      <Col md={3}>\n                        <Input\n                          type=\"checkbox\"\n                          name=\"isApproved\"\n                          onChange={formik.handleChange}\n                          value=\"1\"\n                          checked={formik.values.isApproved}\n                        />{\" \"}\n                        &nbsp;\n                        <Label for=\"exampleEmail\" className=\"fw-bold\">\n                          Chấp nhận\n                        </Label>\n                      </Col>\n                    </Col>\n                  </Col>\n                  <Col md={12}>\n                    {isEdit ? (<Button\n                      color=\"success\"\n                      style={{ marginLeft: \"40%\" }}\n                      type=\"submit\"\n                      disabled={formik.isSubmitting}\n                    >\n                      Sửa bảng quảng cáo\n                    </Button>) : <Button\n                      color=\"success\"\n                      style={{ marginLeft: \"40%\" }}\n                      type=\"submit\"\n                      disabled={formik.isSubmitting}\n                    >\n                      Thêm bảng quảng cáo\n                    </Button>}\n                  </Col>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nAddEditAdvertisement.defaultProps = {\n  isEdit: false,\n};\n\nexport default AddEditAdvertisement;\n","// axiosService.js\n\nimport axios from 'axios';\n// Create an instance of Axios with custom configuration\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:3000', // Replace with your API base URL\n  headers: {\n    'Content-Type': 'application/json',\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Accept\": \"application/json\",\n  },\n});\n\nconst axiosService = {\n  get: (url) => axiosInstance.get(url),\n  post: (url, data) => axiosInstance.post(url, data),\n  put: (url, data) => axiosInstance.put(url, data),\n  delete: (url) => axiosInstance.delete(url),\n};\n\nexport { axiosService };\n"],"names":["AddEditAdvertisement","_ref","isEdit","navigate","useNavigate","AdvertisementId","useParams","validationSchema","yup","shape","title","required","description","start_date","end_date","lat","long","width_advertisement","height_advertisement","price","getAdvertisement","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axiosService$g","data","wrap","_context","prev","next","axiosService","get","concat","sent","abrupt","t0","stop","apply","arguments","handleUpdateAdvertisement","put","formik","values","latitude","longitude","width","height","is_approved","isApproved","is_active","isActive","error","useFormik","initialValues","onSubmit","_onSubmit","_callee2","_context2","handleAddAdvertisement","useEffect","then","setValues","startDate","endDate","_ref3","_callee3","_yield$axiosService$p","_context3","post","_jsx","_Fragment","children","className","Row","Col","md","_jsxs","Card","CardTitle","tag","CardBody","Form","handleSubmit","FormGroup","Label","for","Input","name","placeholder","type","invalid","touched","Boolean","errors","onChange","handleChange","onBlur","handleBlur","value","FormFeedback","rows","moment","format","checked","Button","color","style","marginLeft","disabled","isSubmitting","defaultProps","axiosInstance","axios","create","baseURL","headers","url","delete"],"sourceRoot":""}